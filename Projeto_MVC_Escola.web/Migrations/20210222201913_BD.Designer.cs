// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto_MVC_Escola.web.Models;

namespace Projeto_MVC_Escola.web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210222201913_BD")]
    partial class BD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<int?>("TurmaId");

                    b.Property<string>("cc")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("contacto")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("cp_1")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("cp_2")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("genero");

                    b.Property<int>("id_turma");

                    b.Property<string>("localidade")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("morada")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("nif")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("carga_horaria_curso");

                    b.Property<DateTime>("data_fim");

                    b.Property<DateTime>("data_inicio");

                    b.Property<string>("nome_curso")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CursoId");

                    b.Property<int?>("ProfessorId");

                    b.Property<string>("area_formação")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("carga_horaria_discplina");

                    b.Property<int>("creditos_discplina")
                        .HasMaxLength(8);

                    b.Property<int>("id_curso");

                    b.Property<int>("id_professor");

                    b.Property<string>("nome_disciplina")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId");

                    b.Property<int?>("DisciplinaId");

                    b.Property<string>("aprovado");

                    b.Property<int>("id_aluno");

                    b.Property<int>("id_disciplina");

                    b.Property<decimal>("nota_final");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("cc")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("contacto")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("cp_1")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("cp_2")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("genero");

                    b.Property<string>("localidade")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("morada")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("nif")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CursoId");

                    b.Property<int>("id_curso");

                    b.Property<string>("nome_turma")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Aluno", b =>
                {
                    b.HasOne("Projeto_MVC_Escola.web.Data.Entities.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Disciplina", b =>
                {
                    b.HasOne("Projeto_MVC_Escola.web.Data.Entities.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId");

                    b.HasOne("Projeto_MVC_Escola.web.Data.Entities.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Nota", b =>
                {
                    b.HasOne("Projeto_MVC_Escola.web.Data.Entities.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId");

                    b.HasOne("Projeto_MVC_Escola.web.Data.Entities.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId");
                });

            modelBuilder.Entity("Projeto_MVC_Escola.web.Data.Entities.Turma", b =>
                {
                    b.HasOne("Projeto_MVC_Escola.web.Data.Entities.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId");
                });
#pragma warning restore 612, 618
        }
    }
}
